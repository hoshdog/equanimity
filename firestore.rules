rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user belongs to an organization
    function isUserInOrg(orgId) {
      return exists(/databases/$(database)/documents/orgs/$(orgId)/users/$(request.auth.uid));
    }
    
    // Organizations: Users can read their own org's data. Creation/update is restricted.
    match /orgs/{orgId} {
      allow read: if isUserInOrg(orgId);
      allow create, write: if false; // Must be done via trusted server process
      
      // All subcollections within an org are only accessible to members of that org.
      match /{subcollection}/{docId=**} {
        allow read, write: if isUserInOgrgId);
      }
      
      // Specifically protect Xero tokens from any client access.
      match /xeroTokens/{tenantId} {
        allow read, write: if false; 
      }

      // Allow users to write to their own user document within an org.
      match /users/{userId} {
        allow read: if isUserInOrg(orgId);
        allow write: if isUserInOrg(orgId) && request.auth.uid == userId;
      }
    }

    // Legacy collections should be inaccessible after migration.
    match /projects/{projectId} {
      allow read, write: if false;
    }
    match /customers/{customerId} {
      allow read, write: if false;
    }
     match /jobs/{jobId} {
      allow read, write: if false;
    }
     match /employees/{employeeId} {
      allow read, write: if false;
    }
  }
}
