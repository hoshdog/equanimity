rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to reduce boilerplate
    function isSignedIn() {
      return request.auth != null;
    }

    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }
    
    function isUserInRole(role) {
      return isSignedIn() && getUserData(request.auth.uid).roles.hasAny([role]);
    }

    function isUserInAnyRole(roles) {
      return isSignedIn() && getUserData(request.auth.uid).roles.hasAny(roles);
    }
    
    function isOwner(resource) {
      return request.auth.uid == resource.data.uid || request.auth.uid == resource.data.customerId;
    }

    // Only signed-in users can read their own profile, admins can read any
    match /users/{userId} {
      allow read: if isUserInRole('admin') || request.auth.uid == userId;
      allow write: if isUserInRole('admin') || request.auth.uid == userId;
      // Prevent users from escalating their own privileges
      allow update: if request.auth.uid == userId && !request.resource.data.roles.hasAny(['admin']);
    }

    // Admins can do anything. Clients can only manage their own projects.
    // Contractors/other users can read projects.
    match /projects/{projectId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.resource.data.customerId == request.auth.uid;
      allow update, delete: if isUserInRole('admin') || (isUserInRole('client') && isOwner(resource));
      
      // Subcollections
      match /oneDriveFolders/{folderId} {
        // Only backend functions can write here. No client-side modifications allowed.
        allow read: if isUserInRole('admin') || (isUserInRole('client') && isOwner(get(/databases/$(database)/documents/projects/$(projectId))));
        allow write: if request.auth.token.firebase.sign_in_provider == 'custom';
      }

      match /teamsFiles/{fileId} {
        // Only backend functions can write here. No client-side modifications allowed.
        allow read: if isUserInRole('admin') || (isUserInRole('client') && isOwner(get(/databases/$(database)/documents/projects/$(projectId))));
        allow write: if request.auth.token.firebase.sign_in_provider == 'custom';
      }

      // Security rules for the `teamsFolder` field and `settings.teamsIntegration` sub-object
      allow update: if (
        (isUserInRole('admin') || (isUserInRole('client') && isOwner(resource)))
        // Only allow backend to write to specific integration fields
        && !(request.resource.data.diff(resource.data).affectedKeys().hasAny(['teamsFolder', 'settings']))
      ) || request.auth.token.firebase.sign_in_provider == 'custom';

    }
    
    // Clients can only CRUD jobs for projects they own.
    // Contractors can read jobs. Admins can do anything.
    match /jobs/{jobId} {
        allow read: if isSignedIn();
        allow create: if isSignedIn() && get(/databases/$(database)/documents/projects/$(request.resource.data.projectId)).data.customerId == request.auth.uid;
        allow update, delete: if isUserInRole('admin') || (isUserInRole('client') && get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.customerId == request.auth.uid);
    }

    // All authenticated users can read templates
    match /oneDriveTemplates/{templateId} {
        allow read: if isSignedIn();
        allow write: if isUserInRole('admin');
    }
    
    // Default deny all other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
