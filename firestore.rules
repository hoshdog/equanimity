rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isUserAuthenticated() {
      return request.auth != null;
    }

    function getRole(role) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles[role];
    }
    
    function isRole(role) {
      return request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.hasAny([role]);
    }
    
    function isOneOfRoles(roles) {
       return request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.hasAny(roles);
    }

    function isOwner(doc) {
      return request.auth.uid == doc.uid;
    }

    // USERS
    // Users can read their own profile.
    // Users can update their own profile.
    // Admins can read/write any user profile.
    match /users/{userId} {
      allow read, update: if isUserAuthenticated() && (isOwner(resource.data) || isRole('admin'));
      allow create, delete: if isRole('admin');
    }

    // PROJECTS
    // Anyone authenticated can read.
    // Only admins or the project's customer can create/update/delete.
    match /projects/{projectId} {
      allow read: if isUserAuthenticated();
      allow create: if isUserAuthenticated() && request.resource.data.customerId == request.auth.uid;
      allow update, delete: if isUserAuthenticated() && (isRole('admin') || resource.data.customerId == request.auth.uid);
      
      // CHAT MESSAGES
      // Only project members can read/write messages.
      match /messages/{messageId} {
        allow read, write: if isUserAuthenticated() && request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.assignedStaff;
      }
    }
    
    // CUSTOMERS
    // Only admins can manage customers.
    match /customers/{customerId} {
      allow read, write: if isRole('admin');
      
      // Customer sub-collections
       match /{allSubcollections}/{docId} {
         allow read, write: if isRole('admin');
       }
    }
    
    // EMPLOYEES
    match /employees/{employeeId} {
       allow read, write: if isUserAuthenticated();
    }
    
     // JOBS, QUOTES, PURCHASE ORDERS (Root Collections)
    match /{collection}/{docId} {
        allow read: if isUserAuthenticated();
        allow write: if isUserAuthenticated() && (isRole('admin') || request.resource.data.customerId == request.auth.uid);
    }
    
    // For system-wide tokens like Xero
    match /system_tokens/{tokenId} {
       allow read, write: if isRole('admin');
    }

    match /stockItems/{itemId} {
      allow read, write: if isUserAuthenticated();
    }
    
    match /companies/{companyId} {
       allow read: if isUserAuthenticated();
       allow create: if isUserAuthenticated() && request.resource.data.ownerUid == request.auth.uid;
       allow update: if isUserAuthenticated() && resource.data.ownerUid == request.auth.uid;
    }
  }
}
