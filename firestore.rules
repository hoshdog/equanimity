
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is part of the project (placeholder)
    // In a real app, you'd check a `members` array on the project document.
    function isProjectMember(projectId) {
      return isAuthenticated(); // Simplified for now
    }

    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
    }
    
    match /companies/{companyId} {
      // Allow reads/writes based on company membership
      allow read, write: if isAuthenticated(); 
    }

    match /projects/{projectId} {
      allow read: if isProjectMember(projectId);
      allow create, update, delete: if isProjectMember(projectId);

      // Rules for the new timelineItems subcollection
      match /timelineItems/{itemId} {
        allow read: if isProjectMember(projectId);
        allow create, update, delete: if isProjectMember(projectId);
      }
      
      // Rules for other subcollections
      match /{allChildren=**} {
        allow read, write: if isProjectMember(projectId);
      }
    }

    // Rules for root collections
    match /customers/{customerId}/{allChildren=**} {
        allow read, write: if isAuthenticated();
    }
    
    match /employees/{employeeId} {
        allow read, write: if isAuthenticated();
    }

    match /jobs/{jobId} {
        allow read, write: if isAuthenticated();
    }
    
    match /quotes/{quoteId} {
        allow read, write: if isAuthenticated();
    }

    match /purchaseOrders/{poId} {
        allow read, write: if isAuthenticated();
    }

    match /stockItems/{stockItemId} {
        allow read, write: if isAuthenticated();
    }
  }
}
