// src/ai/flows/suggest-quote-line-items.ts
'use server';
/**
 * @fileOverview An AI agent that suggests a full list of line items (parts and labor) for a quote.
 * It uses the project description, user prompt, uploaded documents (RFQs, plans), and previous quotes as context.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';
import type { SuggestQuoteLineItemsInput, SuggestQuoteLineItemsOutput } from '@/lib/types';
import { SuggestQuoteLineItemsInputSchema, SuggestQuoteLineItemsOutputSchema } from '@/lib/types';


export async function suggestQuoteLineItems(
  input: SuggestQuoteLineItemsInput
): Promise<SuggestQuoteLineItemsOutput> {
  return suggestQuoteLineItemsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestQuoteLineItemsPrompt',
  input: {schema: SuggestQuoteLineItemsInputSchema},
  output: {schema: SuggestQuoteLineItemsOutputSchema},
  prompt: `{{#if quotingProfile.persona}}
{{quotingProfile.persona}}
{{else}}
You are an expert quote estimator for a services business.
{{/if}}
Your task is to analyze a job description, reference documents, past quotes, and available parts/labor to create a comprehensive list of line items for a new quote.

**Job Information & User Prompt:**
"{{{userPrompt}}}"

**Reference Documents:**
{{#each uploadedDocuments}}
- Document: {{{this.fileName}}}
  {{media url=this.dataUri}}
{{/each}}

**Context from Similar Past Quotes:**
{{#each previousQuotesContext}}
- Past Quote:
  \`\`\`json
  {{{this}}}
  \`\`\`
{{/each}}

**Quoting Profile Rules:**
- Desired Margin: {{quotingProfile.defaults.desiredMargin}}%
- Persona: {{quotingProfile.persona}}
- Special Instructions: {{quotingProfile.instructions}}

**Available Parts & Labor Rates (from Profile):**
- Parts Catalogue: \`\`\`json {{{json stringify=partsCatalogue}}} \`\`\`
- Labor Rates: \`\`\`json {{{json stringify=quotingProfile.laborRates}}} \`\`\`
- Material/Service Rates: \`\`\`json {{{json stringify=quotingProfile.materialAndServiceRates}}} \`\`\`

**Instructions:**
1.  **Analyze all inputs**: Carefully read the user prompt and analyze the content of any uploaded documents (text from RFQs, details from plans, etc.). Use the past quotes as a reference for how similar jobs were quoted. Adhere to the persona and special instructions from the Quoting Profile.
2.  **Identify Parts**: From the Parts Catalogue, identify all necessary parts. Determine a reasonable quantity for each. Use the trade price from the catalogue as the \`unitCost\`.
3.  **Estimate Labor**: From the available Labor Rates, determine the type and quantity (in hours) of labor required. Use the provided cost and standard rates for the \`unitCost\` and \`unitPrice\`.
4.  **Calculate Sell Price**: For each line item, calculate the \`unitPrice\` (sell price) by applying the 'Desired Margin' from the Quoting Profile to the \`unitCost\`. The formula is: Sell Price = Cost / (1 - (Margin / 100)).
5.  **Compile Line Items**: Create a single, comprehensive list of all suggested parts and labor line items.
6.  **Provide Reasoning**: Write a brief summary explaining your choices, noting any assumptions made based on the provided information and profile rules.
7.  **Provide Disclaimer**: Include the following mandatory disclaimer: "These suggestions are generated by AI and are intended as a starting point. They may not be fully accurate or complete. Please review all line items, quantities, and prices carefully before sending to the client."

Format the entire output as a single JSON object that conforms to the output schema.
`,
});

const suggestQuoteLineItemsFlow = ai.defineFlow(
  {
    name: 'suggestQuoteLineItemsFlow',
    inputSchema: SuggestQuoteLineItemsInputSchema,
    outputSchema: SuggestQuoteLineItemsOutputSchema,
  },
  async (input) => {
    const { output } = await prompt(input);
    return output!;
  }
);
